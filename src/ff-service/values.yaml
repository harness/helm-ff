# Default values for ci-manager
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  loadbalancerURL: "test@harness.io"
  airgap: false
  ha: false
  opa:
    enabled: false
  # Enable if using ingress objects
  ingress:
    enabled: false
    className: "nginx"
    hosts:
      - 'my-host.example.org'
    tls:
      enabled: false
      secretName: harness-ssl
  imagePullSecrets: []

replicaCount: 1
maxSurge: 1
maxUnavailable: 0

waitForInitContainer:
  image:
    registry: docker.io
    repository: harness/helm-init-container
    pullPolicy: IfNotPresent
    tag: "latest"
    digest: ""
    imagePullSecrets: []

image:
  registry: docker.io
  repository: harness/ff-server-signed
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.1073.0"
  digest: ""
  imagePullSecrets: []

jobs:
  postgres_migration:
    image:
      registry: docker.io
      tag: "1.1073.0"
      repository: harness/ff-postgres-migration-signed
      pullPolicy: Always
      digest: ""
      imagePullSecrets: []
  timescaledb_migrate:
    image:
      registry: docker.io
      tag: "1.1073.0"
      repository: harness/ff-timescale-migration-signed
      pullPolicy: Always
      digest: ""
      imagePullSecrets: []

configmap: {}

timescaleSecret:
  password:
    name: harness-secrets
    key: timescaledbPostgresPassword

memory: 4096

appLogLevel: INFO

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "harness-default"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  runAsUser: 65534
  runAsNonRoot: true
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 16001
  targetport: 3000
  grpcport: 16002
  targetgrpcport: 3001

resources:
  limits:
    cpu: 1
    memory: 2048Mi
  requests:
    cpu: 1
    memory: 2048Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPU: ""
  targetMemory: ""

nodeSelector: {}

tolerations: []

affinity: {}

# extraVolumes:
#   - name: volume-test
#     configMap:
#       name: test-config
#       # readOnly: true
extraVolumes: []

# extraVolumeMounts:
#   - name: volume-test
#     mountPath: /opt/harness/config
extraVolumeMounts: []

lifecycleHooks: {}
# lifecycleHooks:
#   postStart:
#     exec:
#       command:
#   preStop:
#     exec:
#       command: