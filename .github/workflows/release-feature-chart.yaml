name: Release dev chart

on:
  issue_comment:
    types: [created]

jobs:
  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    if: >-
      github.event.issue.pull_request != null &&
      contains(github.event.comment.body, 'trigger feature-build')
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Configure git
        run: |
          git config user.name "$GITHUB_ACTION"
          git config user.email "$GITHUB_ACTION@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.8.1

      - name: Add Helm repos
        run: |
          helm repo add harness-common https://harness.github.io/helm-common
          helm repo add bitnami https://charts.bitnami.com/bitnami

      - name: Install yq
        uses: dcarbone/install-yq-action@v1.0.0
        with:
          version: 'v4.28.1'

      - name: Override values.yaml and Chart.yaml for demo
        run: |
          lookup_current_branch() {
              git rev-parse --abbrev-ref HEAD
          }

          filter_charts() {
              while read -r chart; do
                  [[ ! -d "$chart" ]] && continue
                  local file="$chart/Chart.yaml"
                  if [[ -f "$file" ]]; then
                      echo "$chart"
                  else
                    echo "WARNING: $file is missing, assuming that '$chart' is not a Helm chart. Skipping." 1>&2
                  fi
              done
          }

          lookup_changed_charts() {
              local branch="$1"
              local charts_dir="src"

              local changed_files
              changed_files=$(git diff --find-renames --name-only main..$branch -- "$charts_dir")

              local depth=$(( $(tr "/" "\n" <<< "$charts_dir" | sed '/^\(\.\)*$/d' | wc -l) + 1 ))
              local fields="1-${depth}"

              cut -d '/' -f "$fields" <<< "$changed_files" | uniq | filter_charts
          }

          current_branch=$(lookup_current_branch)
          echo $current_branch

          declare -a changed_charts="$(lookup_changed_charts "$current_branch")"
          for chart in $changed_charts
          do 
            if [ -d "$chart" ]; then
              export random=$((${RANDOM}*${RANDOM}/100))
              export randomVersion=$(yq e ".version" $chart/chart.yaml)-${random}-dev
              yq -i '.version = env(randomVersion)' $chart/Chart.yaml
            fi
          done

      - name: Run Chart Releaser
        uses: helm/chart-releaser-action@v1.4.1
        with:
          charts_dir: src
        env:
          CR_SKIP_EXISTING: true
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_RELEASE_NOTES_FILE: images.txt
